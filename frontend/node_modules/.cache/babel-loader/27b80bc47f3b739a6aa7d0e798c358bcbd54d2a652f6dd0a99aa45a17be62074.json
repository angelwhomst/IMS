{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel Olivarez\\\\Desktop\\\\IMS\\\\frontend\\\\src\\\\components\\\\ToReceive.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ToReceive.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToReceive = () => {\n  _s();\n  const [orders, setOrders] = useState([]); // State to store fetched orders\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch orders when the component mounts\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/ims/variants/delivered');\n        setOrders(response.data.delivered_orders); // Store fetched orders in state\n      } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n      } finally {\n        setLoading(false); // Set loading to false after data is fetched\n      }\n    };\n    fetchOrders();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  const handleReceivedClick = async orderId => {\n    try {\n      const response = await axios.post('http://localhost:8000/ims/variants/mark-received', {\n        order_id: orderId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response.data.message);\n\n      // Optionally, update the UI after marking as received\n      setOrders(prevOrders => prevOrders.filter(order => order.order_id !== orderId)); // Remove the marked order\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error marking the order as received:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this); // Show loading text while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"to-receive-header\",\n      children: \"To Receive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://via.placeholder.com/60\",\n        alt: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"product-name\",\n          children: order.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", order.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", order.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", order.total_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"received-button\",\n          onClick: () => handleReceivedClick(order.order_id) // Pass order_id here\n          ,\n          children: \"RECEIVED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, order.order_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No delivered orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ToReceive, \"ug8UXigqZ8+/aovEHLbbhGhrhf4=\");\n_c = ToReceive;\nexport default ToReceive;\nvar _c;\n$RefreshReg$(_c, \"ToReceive\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ToReceive","_s","orders","setOrders","loading","setLoading","fetchOrders","response","get","data","delivered_orders","error","console","handleReceivedClick","orderId","post","order_id","headers","log","message","prevOrders","filter","order","_error$response","_error$response$data","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","src","alt","product_name","size","quantity","total_price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Angel Olivarez/Desktop/IMS/frontend/src/components/ToReceive.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ToReceive.css\";\n\nconst ToReceive = () => {\n  const [orders, setOrders] = useState([]); // State to store fetched orders\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch orders when the component mounts\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/ims/variants/delivered');\n        setOrders(response.data.delivered_orders); // Store fetched orders in state\n      } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n      } finally {\n        setLoading(false); // Set loading to false after data is fetched\n      }\n    };\n\n    fetchOrders();\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  const handleReceivedClick = async (orderId) => {\n    try {\n      const response = await axios.post(\n        'http://localhost:8000/ims/variants/mark-received', \n        { order_id: orderId },\n        { headers: { 'Content-Type': 'application/json' } }\n      );\n      console.log(response.data.message);\n      \n      // Optionally, update the UI after marking as received\n      setOrders((prevOrders) => prevOrders.filter(order => order.order_id !== orderId)); // Remove the marked order\n    } catch (error) {\n      console.error(\"Error marking the order as received:\", error.response?.data?.detail || error.message);\n    }\n  };\n\n  if (loading) {\n    return <p>Loading orders...</p>; // Show loading text while fetching data\n  }\n\n  return (\n    <div>\n      {/* Red Header with 'To Receive' */}\n      <h1 className=\"to-receive-header\">To Receive</h1>\n\n      {/* Render cards for orders */}\n      {orders.length > 0 ? (\n        orders.map((order) => (\n          <div key={order.order_id} className=\"card\">  {/* Using order_id as key */}\n            {/* Image placeholder */}\n            <img src=\"https://via.placeholder.com/60\" alt=\"Product\" />\n            <div className=\"card-details\">\n              <p className=\"product-name\">{order.product_name}</p>\n              <p>Size: {order.size}</p>\n              <p>Quantity: {order.quantity}</p>\n              <p>Price: {order.total_price}</p>\n\n              {/* Received Button */}\n              <button\n                className=\"received-button\"\n                onClick={() => handleReceivedClick(order.order_id)}  // Pass order_id here\n              >\n                RECEIVED\n              </button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>No delivered orders found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ToReceive;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}