{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel Olivarez\\\\Desktop\\\\IMS\\\\frontend\\\\src\\\\components\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sales.css\"; // Make sure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sales = () => {\n  _s();\n  // State to hold the sales data fetched from the backend\n  const [salesData, setSalesData] = useState([]);\n\n  // Placeholder sales data (you can remove this once the backend data is available)\n  const placeholderData = [{\n    productName: \"Product 1\",\n    category: \"Category A\",\n    totalQuantity: 50,\n    date: \"2024-12-01\"\n  }, {\n    productName: \"Product 2\",\n    category: \"Category B\",\n    totalQuantity: 30,\n    date: \"2024-12-02\"\n  }, {\n    productName: \"Product 3\",\n    category: \"Category C\",\n    totalQuantity: 20,\n    date: \"2024-12-03\"\n  }, {\n    productName: \"Product 4\",\n    category: \"Category A\",\n    totalQuantity: 40,\n    date: \"2024-12-04\"\n  }, {\n    productName: \"Product 5\",\n    category: \"Category B\",\n    totalQuantity: 60,\n    date: \"2024-12-05\"\n  }\n  // Placeholder data ends here\n  ];\n\n  // Fetch sales data from the backend (replace this part with actual API call later)\n  useEffect(() => {\n    // Simulate a backend fetch with a timeout\n    setTimeout(() => {\n      setSalesData(placeholderData); // Replace with actual data from backend\n    }, 1000); // Delay to simulate data loading\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"sales-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Quantity Sold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: salesData.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              className: \"placeholder\",\n              children: \"Loading data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this) : salesData.map((sale, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.totalQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: sale.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Sales, \"ivuxsniXM1EI1p/SbwyOVTwtldo=\");\n_c = Sales;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Sales","_s","salesData","setSalesData","placeholderData","productName","category","totalQuantity","date","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","colSpan","map","sale","index","size","_c","$RefreshReg$"],"sources":["C:/Users/Angel Olivarez/Desktop/IMS/frontend/src/components/Sales.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Sales.css\"; // Make sure to import the CSS file\n\nconst Sales = () => {\n  // State to hold the sales data fetched from the backend\n  const [salesData, setSalesData] = useState([]);\n\n  // Placeholder sales data (you can remove this once the backend data is available)\n  const placeholderData = [\n    { productName: \"Product 1\", category: \"Category A\", totalQuantity: 50, date: \"2024-12-01\" },\n    { productName: \"Product 2\", category: \"Category B\", totalQuantity: 30, date: \"2024-12-02\" },\n    { productName: \"Product 3\", category: \"Category C\", totalQuantity: 20, date: \"2024-12-03\" },\n    { productName: \"Product 4\", category: \"Category A\", totalQuantity: 40, date: \"2024-12-04\" },\n    { productName: \"Product 5\", category: \"Category B\", totalQuantity: 60, date: \"2024-12-05\" },\n    // Placeholder data ends here\n  ];\n\n  // Fetch sales data from the backend (replace this part with actual API call later)\n  useEffect(() => {\n    // Simulate a backend fetch with a timeout\n    setTimeout(() => {\n      setSalesData(placeholderData); // Replace with actual data from backend\n    }, 1000); // Delay to simulate data loading\n  }, []);\n\n  return (\n    <div className=\"sales-page\">\n      {/* Sales header */}\n      <h1>Sales</h1> {/* Added header for the Sales page */}\n      \n      {/* Table Placeholder for Backend Data */}\n      <div className=\"table-container\">\n        <table className=\"sales-table\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>Category</th>\n              <th>Total Quantity Sold</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Placeholder rows */}\n            {salesData.length === 0 ? (\n              <tr>\n                <td colSpan=\"4\" className=\"placeholder\">\n                  Loading data...\n                </td>\n              </tr>\n            ) : (\n              salesData.map((sale, index) => (\n                <tr key={index}>\n                  <td>{sale.productName}</td>\n                  <td>{sale.category}</td>\n                  <td>{sale.size}</td>\n                  <td>{sale.totalQuantity}</td>\n                  <td>{sale.date}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Sales;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}